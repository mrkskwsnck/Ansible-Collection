---
- name: Configure APT
  become: true
  when: ansible_distribution == "Debian"

  block:
    - name: Copy default stable sources
      ansible.builtin.template:
        src: sources.list.j2
        dest: /etc/apt/sources.list
        owner: root
        group: root
        mode: '0644'
      tags: sources
      notify: apt update

    - name: Set install recommends
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/99synaptic
        regexp: ^APT::Install-Recommends
        line: "APT::Install-Recommends \"{{ apt.install_recommends }}\";"
      tags: conf

    - name: Set APT default release for „Testing-Unstable Mix“
      # Refer to https://wiki.debian.org/DebianUnstable#Can_I_use_Sid_packages_on_.22testing.22.3F for more details
      ansible.builtin.blockinfile:
        path: /etc/apt/apt.conf.d/20-tum.conf
        block: |
          # Be careful with APT::Default-Release. See https://wiki.debian.org/AptConfiguration#Be_careful_with_APT::Default-Release
          APT::Default-Release "/^testing(|-security|-updates|-backports)$/";
        owner: root
        group: root
        mode: 0644
        create: true
      when: apt.sources in ('tum', 'unstable')
      tags: sources
      notify: apt update

    - name: Add unstable sources
      ansible.builtin.blockinfile:
        path: /etc/apt/sources.list.d/unstable.list
        block: |
          deb http://deb.debian.org/debian unstable main non-free-firmware contrib non-free
          # deb-src http://deb.debian.org/debian unstable main non-free-firmware contrib non-free
        owner: root
        group: root
        mode: 0644
        create: true
      when: apt.sources in ('tum', 'unstable')
      tags: sources
      notify: apt update

- name: Install or remove packages
  become: true
  when: ansible_distribution == "Debian"
  tags: pkg
  block:
    - name: Remove packages
      apt:
        package: "{{ apt.pkg.remove }}"
        state: absent

    - name: Install packages
      apt:
        install_recommends: "{{ apt.install_recommends }}"
        package: "{{ apt.pkg.install }}"
        state: present
      register: result
      ignore_errors: "'No package matching' in result.stderr"   # No package matching '{{ package_name }}' is available
